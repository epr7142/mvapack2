## Copyright (C) 2014 University of Nebraska Board of Regents.
## Written by Bradley Worley <bradley.worley@huskers.unl.edu>.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; If not, see <http://www.gnu.org/licenses/>.

## -*- texinfo -*-
## @anchor{data2roi}
## @deftypefn {Function File} {@var{X} =} data2roi (@var{Xroi}, @var{ab}, @var{parms}, @var{roi})
## Reconstructs all possible spectral data contained within a data matrix
## that was generated by @ref{roi2data}.
## @end deftypefn

function X = data2roi (Xroi, ab, parms, roi)
  % check the number of input arguments.
  if (nargin != 4 || nargout != 1)
    % throw an exception.
    print_usage();
  end

  % get the dimensions in the dataset.
  if (iscell(ab))
    nd = 2;
  elseif (isvector(ab))
    nd = 1;
  else
    nd = 0;
  end

  % check whether we are un-catting one- or two-dimensional data.
  if (nd == 1)
    % run a one-dimensional un-cat function.
    X = data2roi1d(Xroi, ab, roi);
  elseif (nd == 2)
    % run a two-dimensional un-cat function.
    X = data2roi2d(Xroi, ab, roi);
  else
    % throw an exception.
    error('data2roi: input data must be one- or two-dimensional');
  end
end

